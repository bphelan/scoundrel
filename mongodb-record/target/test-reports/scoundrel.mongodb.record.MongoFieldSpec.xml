<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="alexd-VirtualBox" name="scoundrel.mongodb.record.MongoFieldSpec" tests="230" errors="0" failures="0" skipped="22" time="17.722">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/><property name="java.vm.version" value="25.144-b01"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="AU"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/home/alexd/hg/scoundrel"/><property name="java.runtime.version" value="1.8.0_144-b01"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="/tmp"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Linux"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="4.4.0-89-generic"/><property name="user.home" value="/home/alexd"/><property name="user.timezone" value="Australia/Sydney"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="user.name" value="alexd"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_144"/><property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/><property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::DateField should::which are configured correctly" time="0.124">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::DateField should::which initialize to some value" time="0.04">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::DateField should::which have the correct initial value" time="0.046">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::DateField should::which are readable and writable" time="0.041">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::DateField should::which correctly clear back to the default" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::DateField should::which capture error conditions set in" time="0.041">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::DateField should::which are only flagged as dirty_? when setBox is called with a different value" time="0.008">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::DateField should::which correctly fail to be set to Empty" time="0.006">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::DateField should::which are configured correctly" time="0.016">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::DateField should::which initialize to Empty" time="0.075">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::DateField should::which have the correct initial value" time="0.077">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::DateField should::which are readable and writable" time="0.084">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::DateField should::which correctly clear back to the default" time="0.058">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::DateField should::which capture error conditions set in" time="0.067">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::DateField should::which are only flagged as dirty_? when setBox is called with a different value" time="0.065">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::DateField should::which do not fail when set to Empty" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="DateField should::convert to JValue" time="0.061">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="DateField should::get set from JValue" time="0.066">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="DateField should::convert to form XML" time="0.067">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::JsonObjectField should::which are configured correctly" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::JsonObjectField should::which initialize to some value" time="0.065">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::JsonObjectField should::which have the correct initial value" time="0.062">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::JsonObjectField should::which are readable and writable" time="0.064">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::JsonObjectField should::which correctly clear back to the default" time="0.077">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::JsonObjectField should::which capture error conditions set in" time="0.068">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::JsonObjectField should::which are only flagged as dirty_? when setBox is called with a different value" time="0.082">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::JsonObjectField should::which correctly fail to be set to Empty" time="0.069">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::JsonObjectField should::which are configured correctly" time="0.072">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::JsonObjectField should::which initialize to Empty" time="0.067">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::JsonObjectField should::which have the correct initial value" time="0.064">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::JsonObjectField should::which are readable and writable" time="0.076">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::JsonObjectField should::which correctly clear back to the default" time="0.08">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::JsonObjectField should::which capture error conditions set in" time="0.001">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::JsonObjectField should::which are only flagged as dirty_? when setBox is called with a different value" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::JsonObjectField should::which do not fail when set to Empty" time="0.076">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="JsonObjectField should::convert to JValue" time="0.072">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="JsonObjectField should::get set from JValue" time="0.067">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="JsonObjectField should::convert to form XML" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="ObjectIdField should::work and provide the appropriate date" time="0.079">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::PatternField should::which are configured correctly" time="0.102">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::PatternField should::which initialize to some value" time="0.095">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::PatternField should::which have the correct initial value" time="0.086">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::PatternField should::which are readable and writable" time="0.087">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::PatternField should::which correctly clear back to the default" time="0.088">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::PatternField should::which capture error conditions set in" time="0.086">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::PatternField should::which are only flagged as dirty_? when setBox is called with a different value" time="0.064">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::PatternField should::which correctly fail to be set to Empty" time="0.078">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::PatternField should::which are configured correctly" time="0.069">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::PatternField should::which initialize to Empty" time="0.067">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::PatternField should::which have the correct initial value" time="0.076">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::PatternField should::which are readable and writable" time="0.075">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::PatternField should::which correctly clear back to the default" time="0.071">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::PatternField should::which capture error conditions set in" time="0.09">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::PatternField should::which are only flagged as dirty_? when setBox is called with a different value" time="0.078">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::PatternField should::which do not fail when set to Empty" time="0.081">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="PatternField should::convert to JValue" time="0.07">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="PatternField should::convert to form XML" time="0.158">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::UUIDField should::which are configured correctly" time="0.061">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::UUIDField should::which initialize to some value" time="0.067">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::UUIDField should::which have the correct initial value" time="0.075">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::UUIDField should::which are readable and writable" time="0.072">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::UUIDField should::which correctly clear back to the default" time="0.173">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::UUIDField should::which capture error conditions set in" time="0.078">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::UUIDField should::which are only flagged as dirty_? when setBox is called with a different value" time="0.095">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::UUIDField should::which correctly fail to be set to Empty" time="0.086">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::UUIDField should::which are configured correctly" time="0.071">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::UUIDField should::which initialize to Empty" time="0.073">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::UUIDField should::which have the correct initial value" time="0.075">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::UUIDField should::which are readable and writable" time="0.073">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::UUIDField should::which correctly clear back to the default" time="0.072">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::UUIDField should::which capture error conditions set in" time="0.073">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::UUIDField should::which are only flagged as dirty_? when setBox is called with a different value" time="0.098">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::UUIDField should::which do not fail when set to Empty" time="0.079">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="UUIDField should::convert to JValue" time="0.077">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="UUIDField should::get set from JValue" time="0.075">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="UUIDField should::convert to form XML" time="0.104">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="PasswordField should::require a nonempty password" time="0.083">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="PasswordField should::require at least 3 character password" time="0.077">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (String) should::which are configured correctly" time="0.063">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (String) should::which initialize to some value" time="0.095">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (String) should::which have the correct initial value" time="0.072">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (String) should::which are readable and writable" time="0.072">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (String) should::which correctly clear back to the default" time="0.071">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (String) should::which capture error conditions set in" time="0.09">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (String) should::which are only flagged as dirty_? when setBox is called with a different value" time="0.073">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (String) should::which correctly fail to be set to Empty" time="0.074">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (String) should::convert to JValue" time="0.08">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (String) should::get set from JValue" time="0.071">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (String) should::convert to form XML" time="0.088">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (Int) should::which are configured correctly" time="0.065">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (Int) should::which initialize to some value" time="0.073">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Int) should::which have the correct initial value" time="0.071">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Int) should::which are readable and writable" time="0.07">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Int) should::which correctly clear back to the default" time="0.118">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Int) should::which capture error conditions set in" time="0.07">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Int) should::which are only flagged as dirty_? when setBox is called with a different value" time="0.081">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (Int) should::which correctly fail to be set to Empty" time="0.077">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (Int) should::convert to JValue" time="0.089">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (Int) should::get set from JValue" time="0.079">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (Int) should::convert to form XML" time="0.076">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (ObjectId) should::which are configured correctly" time="0.104">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (ObjectId) should::which initialize to some value" time="0.109">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (ObjectId) should::which have the correct initial value" time="0.094">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (ObjectId) should::which are readable and writable" time="0.088">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (ObjectId) should::which correctly clear back to the default" time="0.079">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (ObjectId) should::which capture error conditions set in" time="0.076">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (ObjectId) should::which are only flagged as dirty_? when setBox is called with a different value" time="0.07">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (ObjectId) should::which correctly fail to be set to Empty" time="0.064">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (ObjectId) should::convert to JValue" time="0.067">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (ObjectId) should::get set from JValue" time="0.075">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (ObjectId) should::convert to form XML" time="0.081">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (Pattern) should::which are configured correctly" time="0.069">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (Pattern) should::which initialize to some value" time="0.072">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Pattern) should::which have the correct initial value" time="0.074">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Pattern) should::which are readable and writable" time="0.071">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Pattern) should::which correctly clear back to the default" time="0.062">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Pattern) should::which capture error conditions set in" time="0.065">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Pattern) should::which are only flagged as dirty_? when setBox is called with a different value" time="0.066">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (Pattern) should::which correctly fail to be set to Empty" time="0.065">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (Pattern) should::convert to JValue" time="0.067">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (Pattern) should::convert to form XML" time="0.067">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (Date) should::which are configured correctly" time="0.061">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (Date) should::which initialize to some value" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Date) should::which have the correct initial value" time="0.069">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Date) should::which are readable and writable" time="0.065">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Date) should::which correctly clear back to the default" time="0.076">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Date) should::which capture error conditions set in" time="0.066">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (Date) should::which are only flagged as dirty_? when setBox is called with a different value" time="0.082">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (Date) should::which correctly fail to be set to Empty" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (Date) should::convert to JValue" time="0.065">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (Date) should::get set from JValue" time="0.084">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (Date) should::convert to form XML" time="0.073">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (UUID) should::which are configured correctly" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (UUID) should::which initialize to some value" time="0.074">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (UUID) should::which have the correct initial value" time="0.078">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (UUID) should::which are readable and writable" time="0.076">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (UUID) should::which correctly clear back to the default" time="0.076">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (UUID) should::which capture error conditions set in" time="0.072">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (UUID) should::which are only flagged as dirty_? when setBox is called with a different value" time="0.07">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (UUID) should::which correctly fail to be set to Empty" time="0.077">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (UUID) should::convert to JValue" time="0.072">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (UUID) should::get set from JValue" time="0.088">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (UUID) should::convert to form XML" time="0.072">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (DateTime) should::which are configured correctly" time="0.071">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (DateTime) should::which initialize to some value" time="0.083">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (DateTime) should::which have the correct initial value" time="0.074">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (DateTime) should::which are readable and writable" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (DateTime) should::which correctly clear back to the default" time="0.191">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (DateTime) should::which capture error conditions set in" time="0.108">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoListField (DateTime) should::which are only flagged as dirty_? when setBox is called with a different value" time="0.078">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoListField (DateTime) should::which correctly fail to be set to Empty" time="0.074">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (DateTime) should::convert to JValue" time="0.089">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (DateTime) should::get set from JValue" time="0.097">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoListField (DateTime) should::convert to form XML" time="0.184">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoJsonObjectListField should::which are configured correctly" time="0.089">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoJsonObjectListField should::which initialize to some value" time="0.076">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoJsonObjectListField should::which have the correct initial value" time="0.075">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoJsonObjectListField should::which are readable and writable" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoJsonObjectListField should::which correctly clear back to the default" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoJsonObjectListField should::which capture error conditions set in" time="0.096">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoJsonObjectListField should::which are only flagged as dirty_? when setBox is called with a different value" time="0.079">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoJsonObjectListField should::which correctly fail to be set to Empty" time="0.08">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoJsonObjectListField should::convert to JValue" time="0.113">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoJsonObjectListField should::get set from JValue" time="0.111">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoJsonObjectListField should::convert to form XML" time="0.109">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="MongoCaseClassListField should::setFromAny a List" time="0.085">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoMapField (String) should::which are configured correctly" time="0.094">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoMapField (String) should::which initialize to some value" time="0.078">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoMapField (String) should::which have the correct initial value" time="0.096">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoMapField (String) should::which are readable and writable" time="0.078">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoMapField (String) should::which correctly clear back to the default" time="0.076">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoMapField (String) should::which capture error conditions set in" time="0.079">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoMapField (String) should::which are only flagged as dirty_? when setBox is called with a different value" time="0.083">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoMapField (String) should::which correctly fail to be set to Empty" time="0.1">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoMapField (String) should::convert to JValue" time="0.085">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoMapField (String) should::get set from JValue" time="0.076">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoMapField (String) should::convert to form XML" time="0.084">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoMapField (Int) should::which are configured correctly" time="0.09">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoMapField (Int) should::which initialize to some value" time="0.066">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoMapField (Int) should::which have the correct initial value" time="0.073">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoMapField (Int) should::which are readable and writable" time="0.077">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoMapField (Int) should::which correctly clear back to the default" time="0.072">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoMapField (Int) should::which capture error conditions set in" time="0.076">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::MongoMapField (Int) should::which are only flagged as dirty_? when setBox is called with a different value" time="0.076">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::MongoMapField (Int) should::which correctly fail to be set to Empty" time="0.072">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoMapField (Int) should::convert to JValue" time="0.073">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoMapField (Int) should::get set from JValue" time="0.09">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::MongoMapField (Int) should::convert to form XML" time="0.088">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="MongoMapField should::create itself from bson doc" time="0.079">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::BsonRecordField should::which are configured correctly" time="0.085">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::BsonRecordField should::which initialize to some value" time="0.082">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::BsonRecordField should::which have the correct initial value" time="0.086">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::BsonRecordField should::which are readable and writable" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::BsonRecordField should::which correctly clear back to the default" time="0.087">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::BsonRecordField should::which capture error conditions set in" time="0.089">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::BsonRecordField should::which are only flagged as dirty_? when setBox is called with a different value" time="0.081">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::BsonRecordField should::which correctly fail to be set to Empty" time="0.084">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordField should::which are configured correctly" time="0.066">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordField should::which initialize to Empty" time="0.089">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordField should::which have the correct initial value" time="0.073">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordField should::which are readable and writable" time="0.084">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordField should::which correctly clear back to the default" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordField should::which capture error conditions set in" time="0.062">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordField should::which are only flagged as dirty_? when setBox is called with a different value" time="0.066">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordField should::which do not fail when set to Empty" time="0.063">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::BsonRecordField should::convert to JValue" time="0.067">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::BsonRecordField should::get set from JValue" time="0.069">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::BsonRecordField should::convert to form XML" time="0.076">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::BsonRecordListField should::which are configured correctly" time="0.067">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::BsonRecordListField should::which initialize to some value" time="0.073">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::BsonRecordListField should::which have the correct initial value" time="0.067">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::BsonRecordListField should::which are readable and writable" time="0.074">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::BsonRecordListField should::which correctly clear back to the default" time="0.092">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::BsonRecordListField should::which capture error conditions set in" time="0.071">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support mandatory fields::function correctly::BsonRecordListField should::which are only flagged as dirty_? when setBox is called with a different value" time="0.068">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support mandatory fields::function correctly::BsonRecordListField should::which correctly fail to be set to Empty" time="0.066">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordListField should::which are configured correctly" time="0.066">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordListField should::which initialize to Empty" time="0.06">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordListField should::which have the correct initial value" time="0.06">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordListField should::which are readable and writable" time="0.071">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordListField should::which correctly clear back to the default" time="0.055">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordListField should::which capture error conditions set in" time="0.069">
                                                 <skipped/>
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="common behaviors for all flavors::support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordListField should::which are only flagged as dirty_? when setBox is called with a different value" time="0.073">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="support 'legacy' optional fields (override optional_?)::function correctly::BsonRecordListField should::which do not fail when set to Empty" time="0.072">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::BsonRecordListField should::convert to JValue" time="0.073">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::BsonRecordListField should::get set from JValue" time="0.085">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="function correctly::BsonRecordListField should::convert to form XML" time="0.127">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="JObjectField should::convert to JValue" time="0.083">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="JObjectField should::get set from JValue" time="0.101">
                                                 
                                               </testcase><testcase classname="scoundrel.mongodb.record.MongoFieldSpec" name="JObjectField should::get set from JValue after BSON roundtrip" time="0.093">
                                                 
                                               </testcase>
                     <system-out></system-out>
                     <system-err></system-err>
                   </testsuite>